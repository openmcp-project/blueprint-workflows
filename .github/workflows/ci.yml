name: Continuous Integration

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch: {}
  pull_request:
    branches:
      - main

env:
  HELM_DOCS_VERSION: "1.14.2"    
  HELM_DOCS_PLATFORM: "Linux_x86_64"

jobs:
  test-typescript:
    name: TS & Action Tests
    runs-on: [ubuntu-latest] 
    permissions:
      actions: read
      checks: write
      contents: write
      pull-requests: write
      statuses: write
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci        
        run: make npm-run-ci

      - name: Build Packages
        id: npm-run-bundle
        run: make npm-run-bundle

      - name: Unit Tests
        id: npm-ci-test
        run: make npm-run-ci-tests
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
          GITHUB_STEP_SUMMARY: ${{ github.workspace }}

      - id: helm-chart-listing
        uses: "./.github/actions/helm-chart/listing"

      - id: helm-chart-build-dependencies
        uses: "./.github/actions/helm-chart/dep-build"

      - id: helm-chart-linting
        uses: "./.github/actions/helm-chart/linting"
      
      - id: helm-chart-manifest-validation
        uses: "./.github/actions/helm-chart/manifest-validation"
      
      - id: helm-chart-version-bump
        uses: "./.github/actions/helm-chart/version-bump"
        with:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          SOURCE_GIT_REPO_URL: ${{ github.server_url }}/${{ github.event.pull_request.head.repo.full_name }}
          TARGET_GIT_REPO_URL: ${{ github.server_url }}/${{ github.event.pull_request.base.repo.full_name }}

      - name: download-helm-docs        
        shell: bash        
        run: |
          set -euo pipefail
          ############################################################
          DEST="$RUNNER_TEMP/helm-docs"
          echo "Downloading..."
          mkdir -p "$DEST"
          cd "$DEST"

          if ! curl -sLO  "https://github.com/norwoodj/helm-docs/releases/download/v${{ env.HELM_DOCS_VERSION}}/helm-docs_${{ env.HELM_DOCS_VERSION}}_${{ env.HELM_DOCS_PLATFORM}}.tar.gz"; then
            echo "!!! ERROR downloading https://github.com/norwoodj/helm-docs/releases/download/v${{ env.HELM_DOCS_VERSION}}/helm-docs__${{ env.HELM_DOCS_VERSION}}_${{ env.HELM_DOCS_PLATFORM}}.tar.gz !!!"
            exit 1
          fi

          if ! tar -xzf "helm-docs_${{ env.HELM_DOCS_VERSION}}_${{ env.HELM_DOCS_PLATFORM}}.tar.gz" helm-docs; then
            echo "!!! ERROR unpacking helm-docs_${{ env.HELM_DOCS_VERSION}}_${{ env.HELM_DOCS_PLATFORM}}.tar.gz !!!"
            exit 1
          fi
          ls -al
          echo "$DEST" >>$GITHUB_PATH
          echo $PWD
          $PWD/helm-docs --version          
          ############################################################
        
      - id: helm-chart-docs
        uses: "./.github/actions/helm-chart/docs"         
      
      - id: k8s-manifest-templating
        uses: "./.github/actions/k8s-manifest-templating"     

      - name: Commmit Compiled JS
        run: |
          git add -A
          git commit -m "chore(ci): Compiled JS Packages" || echo "No changes to commit"
        
      - name: Push Changes
        run: |
          git push origin HEAD:${{ github.event.pull_request.head.ref }} || echo "No changes to push"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_WORKSPACE: ${{ github.workspace }}

      - uses: LouisBrunner/checks-action@v2.0.0
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "openMCP Blueprint Workflows CI"
          conclusion: ${{ job.status }}
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      
      - name: Get commit SHA
        run: echo "commit=$(git rev-parse HEAD)" >> "$GITHUB_ENV"
     
      - name: Set commit status
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          allowForks: true
          status: ${{ job.status }}
          sha: ${{ env.commit }}
          targetUrl: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
