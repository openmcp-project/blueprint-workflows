name: Continuous Integration

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - main

env:
  HELM_DOCS_VERSION: "1.14.2"    
  HELM_DOCS_PLATFORM: "Linux_x86_64"

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: [ubuntu-latest] 
    
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci        
        run: make npm-run-ci

      - name: Check Format
        id: npm-format-check        
        run: make npm-run-format-check
      
      # error: /Documents/GitHub/mcp-blueprint-gh-action/typescript/packages/shared/dist/constants.d.ts
      # 0:0  error  Parsing error: error TS5012: Cannot read file '/Documents/GitHub/mcp-blueprint-gh-action/typescript/packages/shared/.github/linters/tsconfig.json': ENOENT: no such file or directory, open '/Documents/GitHub/mcp-blueprint-gh-action/typescript/packages/shared/.github/linters/tsconfig.json'
      # - name: Lint
      #   id: npm-lint
      #   run: npm run lint

      - name: Unit Tests
        id: npm-ci-test
        run: make npm-run-ci-tests
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
          GITHUB_STEP_SUMMARY: ${{ github.workspace }}
      # build */dist?

  test-action:
    name: Test Action    
    runs-on: [ubuntu-latest] 
    needs: test-typescript
    permissions:
      actions: read
      checks: write
      contents: read
      pull-requests: write
      statuses: write
    steps:      
      - uses: actions/checkout@v4
        name: Checkout
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
            
      - id: helm-chart-listing
        uses: "./.github/actions/helm-chart/listing"

      - id: helm-chart-build-dependencies
        uses: "./.github/actions/helm-chart/dep-build"
      
      - id: helm-chart-linting
        uses: "./.github/actions/helm-chart/linting"
      
      - id: helm-chart-manifest-validation
        uses: "./.github/actions/helm-chart/manifest-validation"
      
      - id: helm-chart-version-bump
        uses: "./.github/actions/helm-chart/version-bump"
        with:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          BUILDING_BLOCKS_GIT_REPO_URL: https://github.com/openmcp-project/blueprint-workflows.git
      
      - name: download-helm-docs        
        shell: bash        
        run: |
          set -euo pipefail
          ############################################################
          DEST="$RUNNER_TEMP/helm-docs"
          echo "Downloading..."
          mkdir -p "$DEST"
          cd "$DEST"

          if ! curl -sLO  "https://github.com/norwoodj/helm-docs/releases/download/v${{ env.HELM_DOCS_VERSION}}/helm-docs_${{ env.HELM_DOCS_VERSION}}_${{ env.HELM_DOCS_PLATFORM}}.tar.gz"; then
            echo "!!! ERROR downloading https://github.com/norwoodj/helm-docs/releases/download/v${{ env.HELM_DOCS_VERSION}}/helm-docs__${{ env.HELM_DOCS_VERSION}}_${{ env.HELM_DOCS_PLATFORM}}.tar.gz !!!"
            exit 1
          fi

          if ! tar -xzf "helm-docs_${{ env.HELM_DOCS_VERSION}}_${{ env.HELM_DOCS_PLATFORM}}.tar.gz" helm-docs; then
            echo "!!! ERROR unpacking helm-docs_${{ env.HELM_DOCS_VERSION}}_${{ env.HELM_DOCS_PLATFORM}}.tar.gz !!!"
            exit 1
          fi
          ls -al
          echo "$DEST" >>$GITHUB_PATH
          echo $PWD
          $PWD/helm-docs --version          
          ############################################################
        
      - id: helm-chart-docs
        uses: "./.github/actions/helm-chart/docs"         
      
      - id: k8s-manifest-templating
        uses: "./.github/actions/k8s-manifest-templating"     
      
      - uses: LouisBrunner/checks-action@v2.0.0
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Managed Control Plane Blueprints
          conclusion: ${{ job.status }}
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      
      - name: Get commit SHA
        run: echo "commit=$(git rev-parse HEAD)" >> "$GITHUB_ENV"
     
      - name: Set commit status
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          allowForks: true
          status: ${{ job.status }}
          sha: ${{ env.commit }}
          context: "Managed Control Plane Blueprints"
          targetUrl: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    # steps:
    #   - name: Checkout
    #     id: checkout
    #     uses: actions/checkout@v4

  #     - name: Test Local Action
  #       id: test-action
  #       uses: ./
  #       with:
  #         milliseconds: 2000

  #     - name: Print Output
  #       id: output
  #       run: echo "${{ steps.test-action.outputs.time }}"
