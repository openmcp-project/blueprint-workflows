name: PR Status Checks

on:
  workflow_call:
    inputs:
      HELM_REPO_NAME:
        required: false
        type: string
        description: 'Helm Repository Name'
      HELM_REPO_URL:
        required: false
        type: string
        description: 'Helm Repository URL'
      HELM_OCI_REGISTRY:
        required: false
        type: string
        description: 'Helm OCI Registry URL'
    secrets:
      HELM_REPO_USERNAME:
        required: false
        description: 'Helm Repository Username'
      HELM_REPO_TOKEN:
        required: false
        description: 'Helm Repository Token'
      
permissions:
  pull-requests: write
  contents: write
  packages: read
  actions: write
  checks: write
  statuses: write
  
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  HELM_DOCS_VERSION: "1.14.2"    
  HELM_DOCS_PLATFORM: "Linux_x86_64"
  KUSTOMIZE_VERSION: "5.0.4"

jobs:
  pr-status-check:
    name: PR Status Check    
    runs-on: [ubuntu-latest]
    steps:      
      - uses: actions/checkout@v5
        name: Checkout
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
            
      - id: helm-chart-listing
        uses: "openmcp-project/blueprint-workflows/.github/actions/helm-chart/listing@feat/kustomize"

      - id: kustomize-listing
        uses: "openmcp-project/blueprint-workflows/.github/actions/kustomize/listing@feat/kustomize"

      # Workflow supports only one helm repo add for now. If you need to add multiple helm repos, you need to copy and modify this workflow.
      - id: helm-repo-add
        shell: bash
        run: |
          set -euo pipefail
          if [ -n "${{ inputs.HELM_REPO_URL }}" ]; then
            if [ -z "${{ secrets.HELM_REPO_USERNAME }}" ]; then
              helm repo add ${{ inputs.HELM_REPO_NAME }} ${{ inputs.HELM_REPO_URL }}
              helm repo update
            elif [ -z "${{ secrets.HELM_REPO_TOKEN }}" ]; then
              echo "HELM_REPO_TOKEN is not set. Skipping helm repo add."
              exit 0
            else
              helm repo add ${{ inputs.HELM_REPO_NAME }} ${{ inputs.HELM_REPO_URL }} --username ${{ secrets.HELM_REPO_USERNAME }} --password ${{ secrets.HELM_REPO_TOKEN }}
              helm repo update
            fi
          elif [ -n "${{ inputs.HELM_OCI_REGISTRY }}" ]; then
            if [ -z "${{ secrets.HELM_REPO_USERNAME }}" ]; then
              helm registry login ${{ inputs.HELM_OCI_REGISTRY }}
            elif [ -z "${{ secrets.HELM_REPO_TOKEN }}" ]; then
              echo "HELM_REPO_TOKEN is not set. Skipping registry login add."
              exit 0
            else
              helm registry login ${{ inputs.HELM_OCI_REGISTRY }} --username ${{ secrets.HELM_REPO_USERNAME }} --password ${{ secrets.HELM_REPO_TOKEN }}
            fi
          else
            echo "Neither HELM_REPO_URL nor HELM_OCI_REGISTRY is set. Skipping helm repo add or registry login."
            exit 0
          fi

      - id: helm-chart-build-dependencies
        uses: "openmcp-project/blueprint-workflows/.github/actions/helm-chart/dep-build@feat/kustomize"
      
      - id: helm-chart-linting
        uses: "openmcp-project/blueprint-workflows/.github/actions/helm-chart/linting@feat/kustomize"
      
      - id: helm-chart-manifest-validation
        uses: "openmcp-project/blueprint-workflows/.github/actions/helm-chart/manifest-validation@feat/kustomize"

      - id: kustomize-manifest-validation
        uses: "openmcp-project/blueprint-workflows/.github/actions/kustomize/manifest-validation@feat/kustomize"

      - id: helm-chart-version-bump
        uses: "openmcp-project/blueprint-workflows/.github/actions/helm-chart/version-bump@feat/kustomize"
        with:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          SOURCE_GIT_REPO_URL: ${{ github.server_url }}/${{ github.event.pull_request.head.repo.full_name }}
          TARGET_GIT_REPO_URL: ${{ github.server_url }}/${{ github.event.pull_request.base.repo.full_name }}

      - id: kustomize-version-bump
        uses: "openmcp-project/blueprint-workflows/.github/actions/kustomize/version-bump@feat/kustomize"
        with:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          SOURCE_GIT_REPO_URL: ${{ github.server_url }}/${{ github.event.pull_request.head.repo.full_name }}
          TARGET_GIT_REPO_URL: ${{ github.server_url }}/${{ github.event.pull_request.base.repo.full_name }}
      
      - name: download-helm-docs        
        shell: bash        
        run: |
          set -euo pipefail
          ############################################################
          DEST="$RUNNER_TEMP/helm-docs"
          echo "Downloading..."
          mkdir -p "$DEST"
          cd "$DEST"

          if ! curl -sLO  "https://github.com/norwoodj/helm-docs/releases/download/v${{ env.HELM_DOCS_VERSION}}/helm-docs_${{ env.HELM_DOCS_VERSION}}_${{ env.HELM_DOCS_PLATFORM}}.tar.gz"; then
            echo "!!! ERROR downloading https://github.com/norwoodj/helm-docs/releases/download/v${{ env.HELM_DOCS_VERSION}}/helm-docs_${{ env.HELM_DOCS_VERSION}}_${{ env.HELM_DOCS_PLATFORM}}.tar.gz !!!"
            exit 1
          fi

          if ! tar -xzf "helm-docs_${{ env.HELM_DOCS_VERSION}}_${{ env.HELM_DOCS_PLATFORM}}.tar.gz" helm-docs; then
            echo "!!! ERROR unpacking helm-docs_${{ env.HELM_DOCS_VERSION}}_${{ env.HELM_DOCS_PLATFORM}}.tar.gz !!!"
            exit 1
          fi
          ls -al
          echo "$DEST" >>$GITHUB_PATH
          echo $PWD
          $PWD/helm-docs --version          
          ############################################################

      # - name: install-kustomize        
      #   shell: bash        
      #   run: |
      #     set -euo pipefail
      #     ############################################################
      #     DEST="$RUNNER_TEMP/kustomize"
      #     echo "Downloading Kustomize..."
      #     mkdir -p "$DEST"
      #     cd "$DEST"

      #     if ! curl -sLO "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${{ env.KUSTOMIZE_VERSION}}/kustomize_v${{ env.KUSTOMIZE_VERSION}}_linux_amd64.tar.gz"; then
      #       echo "!!! ERROR downloading Kustomize v${{ env.KUSTOMIZE_VERSION}} !!!"
      #       exit 1
      #     fi

      #     if ! tar -xzf "kustomize_v${{ env.KUSTOMIZE_VERSION}}_linux_amd64.tar.gz" kustomize; then
      #       echo "!!! ERROR unpacking kustomize_v${{ env.KUSTOMIZE_VERSION}}_linux_amd64.tar.gz !!!"
      #       exit 1
      #     fi
      #     ls -al
      #     echo "$DEST" >>$GITHUB_PATH
      #     echo $PWD
      #     $PWD/kustomize version          
      #     ############################################################
        
      - id: helm-chart-docs
        uses: "openmcp-project/blueprint-workflows/.github/actions/helm-chart/docs@feat/kustomize"
      
      - id: k8s-manifest-templating
        uses: "openmcp-project/blueprint-workflows/.github/actions/k8s-manifest-templating@feat/kustomize"
      
      - name: Get commit SHA
        run: echo "commit=$(git rev-parse HEAD)" >> "$GITHUB_ENV"
     
      - name: Set commit status
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          allowForks: true
          status: ${{ job.status }}
          sha: ${{ env.commit }}
          targetUrl: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
